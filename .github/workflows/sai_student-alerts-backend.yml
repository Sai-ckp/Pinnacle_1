name: Build and deploy Python app to Azure Web App - student-alerts-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      APP_NAME: student-alerts-backend
      RESOURCE_GROUP: pinnacle-college

    steps:
      - name: üß© Checkout code
        uses: actions/checkout@v4

      - name: üìÅ Detect changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            html:
              - '**/*.html'
              - 'templates/**'
            static:
              - 'static/**'
            backend:
              - '**/*.py'
              - 'requirements.txt'

      - name: üß± Install system dependencies for WeasyPrint
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: ‚ö° Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üß∞ Create virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: üßæ Run collectstatic
        if: steps.changes.outputs.html == 'true' || steps.changes.outputs.static == 'true' || steps.changes.outputs.backend == 'true'
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput || true

      - name: üóÑÔ∏è Run Django migrations
        if: steps.changes.outputs.backend == 'true'
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py migrate --noinput

      - name: üîê Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_365CC9311E4C4A2487CB1BAA01746F7A }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0EB78AC662B5425DBACE369EDF555C0B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_72AC7174F5C444C1BE9DEAD7A37582D5 }}

      - name: ‚öôÔ∏è Set Azure Web App environment variables
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --settings \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}'

      - name: üïí Wait before deployment (prevent SCM restart)
        run: sleep 30

      - name: üì¶ Prepare deployment package
        run: |
          echo "Zipping project for deployment..."
          zip -r deploy.zip . -x "*.git*" "venv/*" "__pycache__/*"

      - name: üß≠ List project files (debug)
        run: |
          echo "Listing top-level files before deploy:"
          ls -lah

      - name: üöÄ Deploy Django app to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: deploy.zip
          clean: true
